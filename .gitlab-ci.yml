# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Python.gitlab-ci.yml

# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

include:
  - project : 'ci-tools/container-image-ci-templates'
    file : 'kaniko-image.gitlab-ci.yml'
    ref: master

stages:
  - build_wheel
  - build_docker_image

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  PY_IMAGE: dbmon2-service
  ANG_IMAGE: dbmon2-ui
  VERSION: '1.0'

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/topics/caching/
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
cache:
  paths:
    - .cache/pip
    - venv/


build_wheel_job:
  stage: build_wheel
  rules:
    - if: $DO_WHEEL == "yes" && $CI_PIPELINE_SOURCE != 'merge_request_event' 
  script:
    - python -m pip install --upgrade pip
    - python -m pip install --upgrade setuptools wheel
    - python -m pip install --upgrade twine build
    - cd RestApi; python -m build --wheel
    # an alternative approach is to install and run:
    # - pip install dist/*whl
    # run the command here
  artifacts:
    paths:
      - ./dist/*.whl

build_container_job:
  rules:
    - if: $DO_DOCKER_IMAGE == "yes" && $CI_PIPELINE_SOURCE != 'merge_request_event' 
  stage: build_docker_image
  extends: .build_kaniko
  variables:
    REGISTRY_IMAGE_PATH : "registry.cern.ch/atlas-dbmon2/$PY_IMAGE:$VERSION"
    CONTEXT_DIR: ""
    PUSH_IMAGE: "true"
    DOCKER_FILE_NAME: "Dockerfile.api"

